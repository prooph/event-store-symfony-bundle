name: "Tests"

on:
    push:
    pull_request:

jobs:
    tests:
        name: Tests
        strategy:
            matrix:
                symfony-version:
                    - "5.4.*"
                    - "6.4.*"
                    - "7.0.*"
                php-version:
                    - "8.1"
                    - "8.2"
                    - "8.3"
                operating-system:
                    - "ubuntu-latest"

        runs-on: ${{ matrix.operating-system }}
        env:
            COMPOSER_MEMORY_LIMIT: -1
        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: pcov
                    tools: composer:v2
                    php-version: "${{ matrix.php-version }}"
                    ini-values: memory_limit=-1

            -   name: "Get Composer Cache Directory"
                id: composer-cache
                run: |
                    echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   name: "Cache Composer dependencies"
                uses: "actions/cache@v2"
                with:
                    path: |
                        ${{ steps.composer-cache.outputs.dir }}
                    key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-${{ hashFiles('**/composer.lock') }}"
                    restore-keys: |
                        php-${{ matrix.php-version }}-${{ matrix.dependencies }}-composer-

            -   name: "Require php-coveralls/php-coveralls"
                run: "composer global require php-coveralls/php-coveralls"

            -   name: "Install dependencies"
                run: "composer update -n --prefer-dist"

            -   name: "Test"
                run: "composer test-coverage"

            -   name: "Upload coverage results to Coveralls"
                env:
                    COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: "php-coveralls -v"
